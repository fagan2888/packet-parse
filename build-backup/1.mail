Sender: <xxxxxx@xxxxx.co.uk>

Receiver: <xxxxxx.xxxx@xxxxx.com>

Accepted: yes

DATA
Reply-To: <xxxxxx@xxxxx.co.uk>
From: "WShark User" <xxxxxx@xxxxx.co.uk>
To: <xxxxxx.xxxx@xxxxx.com>
Subject: Test message for capture
Date: Sun, 24 Jun 2007 10:56:03 +0200
MIME-Version: 1.0
Content-Type: multipart/mixed;
	boundary="----=_NextPart_000_0012_01C7B64E.426C8120"
X-Mailer: Microsoft Office Outlook, Build 11.0.5510
Thread-Index: Ace2O6M0WGyVJP3rQCuQePVHKWo5Ag==
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.3138

This is a multi-part message in MIME format.

------=_NextPart_000_0012_01C7B64E.426C8120
Content-Type: text/plain;
	charset="us-ascii"
Content-Transfer-Encoding: 7bit


Testing, testing, 1 2 3 

------=_NextPart_000_0012_01C7B64E.426C8120
Content-Type: text/plain;
	name="words.txt"
Content-Transfer-Encoding: quoted-printable
Content-Disposition: attachment;
	filename="words.txt"

-T=20
:: UserWarning: The same field names for different types. Explicit field =
renaming is recommended.
x121_dcc_code
 x121_dcc_code_01     AddrNumericString    =
PhysicalDeliveryCountryName/x121-dcc-code
 x121_dcc_code        NumericString        =
CountryName/_untag/x121-dcc-code

x411.cnf:529: UserWarning: Unused SET_TYPE for CountryName/x121-dcc-code
  AddrNumericString     UserAddress/x121/x121-address =
CountryName/x121-dcc-code PhysicalDeliveryCountryName/x121-dcc-code =
PostalCode/numeric-code
ASN.1 to Wireshark dissector compiler


13% smaller

rtse.cnf(112) : error C2220: warning treated as error - no object file =
generated
rtse.cnf(112) : warning C4133: 'function' : incompatible types - from =
'const struct _ber_sequence_t [5]' to 'const struct _ber_old_sequence_t =
*'

rtse.cnf:128: UserWarning: Unused FN_BODY for =
EXTERNALt/encoding/single-ASN1-type
  offset=3Dcall_rtse_oid_callback(object_identifier_id, tvb, offset, =
actx->pinfo, top_tree);
rtse.cnf:115: UserWarning: Unused FN_BODY for =
EXTERNALt/indirect-reference
  char *oid;

------=_NextPart_000_0012_01C7B64E.426C8120
Content-Type: application/octet-stream;
	name="related.patch"
Content-Transfer-Encoding: quoted-printable
Content-Disposition: attachment;
	filename="related.patch"

Index: asn1/ldap/Lightweight-Directory-Access-Protocol-V3.asn=0A=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=0A=
--- asn1/ldap/Lightweight-Directory-Access-Protocol-V3.asn	(revision =
18688)=0A=
+++ asn1/ldap/Lightweight-Directory-Access-Protocol-V3.asn	(working copy)=0A=
@@ -1,7 +1,7 @@=0A=
 -- Module Lightweight-Directory-Access-Protocol-V3 (RFC 2251:12/1997)=0A=
 Lightweight-Directory-Access-Protocol-V3=0A=
 --=0A=
--- $Id:$=0A=
+-- $Id$=0A=
 -- Copyright (C) The Internet Society (1997). This version of=0A=
 -- this ASN.1 module is part of RFC 2251;=0A=
 -- see the RFC itself for full legal notices.=0A=
@@ -113,7 +113,7 @@=0A=
 =0A=
 Referral ::=3D SEQUENCE OF LDAPURL=0A=
 =0A=
-LDAPURL ::=3D LDAPString -- limited to characters permitted in URLs=0A=
+LDAPURL ::=3D OCTET STRING -- LDAPString - - limited to characters =
permitted in URLs=0A=
 =0A=
 Controls ::=3D SEQUENCE OF Control=0A=
 =0A=
Index: asn1/ldap/ldap.cnf=0A=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=0A=
--- asn1/ldap/ldap.cnf	(revision 18688)=0A=
+++ asn1/ldap/ldap.cnf	(working copy)=0A=
@@ -28,6 +28,9 @@=0A=
 Mechanism  TYPE =3D FT_STRING  DISPLAY =3D BASE_NONE  STRINGS =3D NULL=0A=
 AssertionValue TYPE =3D FT_STRING  DISPLAY =3D BASE_NONE  STRINGS =3D =
NULL=0A=
 =0A=
+#.FN_FTR LDAPURL=0A=
+	PROTO_ITEM_SET_URL(get_ber_last_created_item());=0A=
+=0A=
 #.FN_PARS LDAPOID VAL_PTR =3D &parameter_tvb=0A=
 #.FN_HDR LDAPOID=0A=
 =0A=
Index: asn1/logotype-cert-extn/logotype-cert-extn.cnf=0A=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=0A=
--- asn1/logotype-cert-extn/logotype-cert-extn.cnf	(revision 18688)=0A=
+++ asn1/logotype-cert-extn/logotype-cert-extn.cnf	(working copy)=0A=
@@ -14,6 +14,12 @@=0A=
 LogotypeExtn B "1.3.6.1.5.5.7.20.1" "id-pe-logo-loyalty"=0A=
 LogotypeExtn B "1.3.6.1.5.5.7.20.2" "id-pe-logo-background"=0A=
 =0A=
+#.FN_FTR IA5String=0A=
+	if((hf_index =3D=3D hf_logotypecertextn_logotypeURI_item) ||=0A=
+	   (hf_index =3D=3D hf_logotypecertextn_refStructURI_item)) =0A=
+	   PROTO_ITEM_SET_URL(get_ber_last_created_item());=0A=
+=0A=
+=0A=
 #.NO_EMIT=0A=
 =0A=
 #.TYPE_RENAME=0A=
Index: asn1/x509ce/packet-x509ce-template.c=0A=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=0A=
--- asn1/x509ce/packet-x509ce-template.c	(revision 18688)=0A=
+++ asn1/x509ce/packet-x509ce-template.c	(working copy)=0A=
@@ -30,6 +30,7 @@=0A=
 #include <glib.h>=0A=
 #include <epan/packet.h>=0A=
 #include <epan/conversation.h>=0A=
+#include <epan/related.h>=0A=
 =0A=
 #include <stdio.h>=0A=
 #include <string.h>=0A=
@@ -116,5 +117,8 @@=0A=
 #include "packet-x509ce-dis-tab.c"=0A=
 	register_ber_oid_dissector("2.5.29.24", =
dissect_x509ce_invalidityDate_callback, proto_x509ce, =
"id-ce-invalidityDate");=0A=
 	register_ber_oid_dissector("2.5.29.51", =
dissect_x509ce_baseUpdateTime_callback, proto_x509ce, =
"id-ce-baseUpdateTime");=0A=
+=0A=
+	register_related_hfid_callback("GeneralName URL", =
hf_x509ce_uniformResourceIdentifier, related_url_cb);=0A=
+=0A=
 }=0A=
 =0A=
Index: asn1/x509ce/x509ce-exp.cnf=0A=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=0A=
--- asn1/x509ce/x509ce-exp.cnf	(revision 18688)=0A=
+++ asn1/x509ce/x509ce-exp.cnf	(working copy)=0A=
@@ -1,6 +1,6 @@=0A=
 # Do not modify this file.=0A=
 # It is created automatically by the ASN.1 to Wireshark dissector =
compiler=0A=
-# .\x509ce-exp.cnf=0A=
+# ./x509ce-exp.cnf=0A=
 # ../../tools/asn2wrs.py -b -e -p x509ce -c x509ce.cnf -s =
packet-x509ce-template CertificateExtensions.asn=0A=
 =0A=
 #.MODULE=0A=
Index: gtk/menu.c=0A=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=0A=
--- gtk/menu.c	(revision 18688)=0A=
+++ gtk/menu.c	(working copy)=0A=
@@ -531,6 +531,8 @@=0A=
                        0, WIRESHARK_STOCK_WIKI),=0A=
     ITEM_FACTORY_STOCK_ENTRY("/Filter Field Reference", NULL, =
selected_ptree_ref_cb,=0A=
                        0, WIRESHARK_STOCK_INTERNET),=0A=
+    ITEM_FACTORY_STOCK_ENTRY("/Related Information", NULL, =
selected_ptree_related_cb,=0A=
+                       0, WIRESHARK_STOCK_INTERNET),=0A=
     ITEM_FACTORY_ENTRY("/Protocol Preferences...", NULL, properties_cb,=0A=
                        0, NULL, NULL),=0A=
     ITEM_FACTORY_ENTRY("/<separator>", NULL, NULL, 0, "<Separator>", =
NULL),=0A=
@@ -2160,6 +2162,8 @@=0A=
 	  TRUE);=0A=
 	set_menu_sensitivity(tree_view_menu_factory, "/Filter Field Reference",=0A=
 	  TRUE);=0A=
+	set_menu_sensitivity(tree_view_menu_factory, "/Related Information",=0A=
+			     selected_ptree_has_related());=0A=
   } else {=0A=
 	set_menu_sensitivity(main_menu_factory,=0A=
 	    "/Go/Go to Corresponding Packet", FALSE);=0A=
@@ -2177,6 +2181,8 @@=0A=
 	  FALSE);=0A=
 	set_menu_sensitivity(tree_view_menu_factory, "/Filter Field Reference",=0A=
 	  FALSE);=0A=
+	set_menu_sensitivity(tree_view_menu_factory, "/Related Information",=0A=
+	  FALSE);=0A=
   }=0A=
 =0A=
   walk_menu_tree_for_selected_tree_row(tap_menu_tree_root, =
cf->finfo_selected);=0A=
Index: gtk/main.c=0A=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=0A=
--- gtk/main.c	(revision 18688)=0A=
+++ gtk/main.c	(working copy)=0A=
@@ -65,6 +65,7 @@=0A=
 #include <epan/emem.h>=0A=
 #include <epan/ex-opt.h>=0A=
 #include <epan/funnel.h>=0A=
+#include <epan/related.h>=0A=
 =0A=
 /* general (not GTK specific) */=0A=
 #include "file.h"=0A=
@@ -90,6 +91,7 @@=0A=
 #include "version_info.h"=0A=
 #include "merge.h"=0A=
 =0A=
+=0A=
 #ifdef HAVE_LIBPCAP=0A=
 #include "capture-pcap-util.h"=0A=
 #include "capture.h"=0A=
@@ -382,6 +384,27 @@=0A=
     }=0A=
 }=0A=
 =0A=
+void=0A=
+selected_ptree_related_cb(GtkWidget *widget _U_, gpointer data _U_)=0A=
+{=0A=
+=0A=
+  gchar *ret_url =3D NULL;=0A=
+=0A=
+  if(do_related(cfile.finfo_selected, &ret_url) && *ret_url) {=0A=
+    browser_open_url(ret_url);=0A=
+    g_free(ret_url);=0A=
+  }=0A=
+=0A=
+=0A=
+}=0A=
+=0A=
+gboolean selected_ptree_has_related()=0A=
+{=0A=
+=0A=
+  return have_related(cfile.finfo_selected);=0A=
+=0A=
+}=0A=
+=0A=
 static gchar *=0A=
 get_text_from_packet_list(gpointer data)=0A=
 {=0A=
Index: gtk/main.h=0A=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=0A=
--- gtk/main.h	(revision 18688)=0A=
+++ gtk/main.h	(working copy)=0A=
@@ -105,6 +105,18 @@=0A=
  */=0A=
 extern void selected_ptree_ref_cb(GtkWidget *widget, gpointer data);=0A=
 =0A=
+/** User requested "Related Information" by ptree context menu.=0A=
+ *=0A=
+ * @param widget parent widget (unused)=0A=
+ * @param data unused=0A=
+ */=0A=
+extern void selected_ptree_related_cb(GtkWidget *widget, gpointer data);=0A=
+=0A=
+/** Determine if "Related Information" should be enabled in ptree =
context menu.=0A=
+ *=0A=
+ */=0A=
+extern gboolean selected_ptree_has_related();=0A=
+=0A=
 /** "Apply as Filter" / "Prepare a Filter" action type. */=0A=
 typedef enum {=0A=
     MATCH_SELECTED_REPLACE, /**< "Selected" */=0A=
Index: epan/related.c=0A=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=0A=
--- epan/related.c	(revision 0)=0A=
+++ epan/related.c	(revision 0)=0A=
@@ -0,0 +1,177 @@=0A=
+/* related.c=0A=
+ * related field information   2006 Graeme Lunt=0A=
+ *=0A=
+ * $Id$=0A=
+ *=0A=
+ * Wireshark - Network traffic analyzer=0A=
+ * By Gerald Combs <gerald@wireshark.org>=0A=
+ * Copyright 1998 Gerald Combs=0A=
+ * =0A=
+ * This program is free software; you can redistribute it and/or=0A=
+ * modify it under the terms of the GNU General Public License=0A=
+ * as published by the Free Software Foundation; either version 2=0A=
+ * of the License, or (at your option) any later version.=0A=
+ * =0A=
+ * This program is distributed in the hope that it will be useful,=0A=
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of=0A=
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the=0A=
+ * GNU General Public License for more details.=0A=
+ * =0A=
+ * You should have received a copy of the GNU General Public License=0A=
+ * along with this program; if not, write to the Free Software=0A=
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  =
02111-1307, USA.=0A=
+ */=0A=
+=0A=
+#ifdef HAVE_CONFIG_H=0A=
+# include "config.h"=0A=
+#endif=0A=
+=0A=
+#include <stdio.h>=0A=
+=0A=
+#ifdef HAVE_SYS_TYPES_H=0A=
+# include <sys/types.h>=0A=
+#endif=0A=
+=0A=
+#include <string.h>=0A=
+#include "epan/packet_info.h"=0A=
+#include <epan/related.h>=0A=
+=0A=
+typedef struct _related_callback_t {=0A=
+  struct _related_callback_t *next;=0A=
+  gchar *name;=0A=
+  int  hf_lb;=0A=
+  int hf_ub;=0A=
+  enum ftenum type;=0A=
+  related_cb related;=0A=
+} related_t;=0A=
+=0A=
+=0A=
+static related_t *related_list=3DNULL;=0A=
+=0A=
+static gboolean check_related(field_info *finfo, gboolean doit, const =
gchar **ret_url);=0A=
+=0A=
+static gboolean related_url_string_cb(field_info *finfo, gboolean doit, =
const gchar**  ret_url)=0A=
+{=0A=
+=0A=
+  if(finfo && IS_FT_STRING(finfo->hfinfo->type) && FI_GET_FLAG(finfo, =
FI_URL)) {=0A=
+    =0A=
+    if(doit && ret_url) {=0A=
+      /* the URL will be freed */=0A=
+      *ret_url =3D g_strndup(tvb_get_ptr(finfo->ds_tvb, finfo->start, =
finfo->length), finfo->length);=0A=
+=0A=
+      return TRUE;=0A=
+    } else {=0A=
+	return TRUE;=0A=
+    }=0A=
+  }=0A=
+=0A=
+  return FALSE;=0A=
+=0A=
+}=0A=
+=0A=
+void related_init()=0A=
+{=0A=
+=0A=
+  /* register a callback for strings that have been marked as URLs with=0A=
+     PROTO_ITEM_SET_URL */=0A=
+=0A=
+  register_related_type_callback("View URL", FT_STRING, =
related_url_string_cb);=0A=
+=0A=
+}=0A=
+=0A=
+int register_related_callback(const char *name, int hf_lb, int hf_ub, =
enum ftenum type, related_cb related)=0A=
+{=0A=
+  related_t *r, *rl;=0A=
+  int i;=0A=
+=0A=
+  /* sanity check */=0A=
+  if(!related)=0A=
+    return 0;=0A=
+=0A=
+  r =3D g_malloc(sizeof(related_t));=0A=
+  r->next =3D NULL;=0A=
+  =0A=
+  r->name =3D g_strdup(name);=0A=
+  r->hf_lb =3D hf_lb;=0A=
+  r->hf_ub =3D hf_ub;=0A=
+  r->type =3D type;=0A=
+  r->related =3D related;=0A=
+=0A=
+  if(!related_list){=0A=
+    related_list=3Dr;=0A=
+    i=3D1;=0A=
+  } else {=0A=
+    for(i=3D2,rl=3Drelated_list; rl->next; i++,rl=3Drl->next)=0A=
+      ;=0A=
+    rl->next=3Dr;=0A=
+  }=0A=
+  =0A=
+  return i;=0A=
+=0A=
+}=0A=
+=0A=
+gboolean have_related(field_info *finfo)=0A=
+{=0A=
+=0A=
+  return check_related(finfo, FALSE, NULL);=0A=
+=0A=
+}=0A=
+=0A=
+gboolean do_related(field_info *finfo, const gchar **ret_url)=0A=
+{=0A=
+=0A=
+  return check_related(finfo, TRUE, ret_url);=0A=
+=0A=
+}=0A=
+=0A=
+static gboolean check_related(field_info *finfo, gboolean doit, const =
gchar **ret_url)=0A=
+{=0A=
+  related_t *r;=0A=
+  int pass;=0A=
+  =0A=
+  for(pass =3D 1; pass < 3; pass++) {=0A=
+    for(r =3D related_list; r; r =3D r->next) {=0A=
+    =0A=
+      if(/* first pass does specific ranges and hfid fields */ =0A=
+	 ((pass =3D=3D 1) && (r->hf_ub !=3D G_MAXINT)) || =0A=
+	 /* second pass does generic type field */=0A=
+	 ((pass =3D=3D 2) && (r->hf_ub =3D=3D G_MAXINT))) {=0A=
+    =0A=
+	if(((finfo->hfinfo->id >=3D r->hf_lb) && (finfo->hfinfo->id <=3D =
r->hf_ub)) &&=0A=
+	   ((finfo->hfinfo->type =3D=3D r->type) || (r->type =3D=3D FT_NONE))) =
{=0A=
+=0A=
+	  if(r->related(finfo, doit, ret_url))=0A=
+	    /* we have found some related information */=0A=
+	    return TRUE;=0A=
+	}=0A=
+      }=0A=
+    }=0A=
+  }=0A=
+  =0A=
+  return FALSE;=0A=
+=0A=
+}=0A=
+=0A=
+/* a common utility function for fields that are URLs */=0A=
+=0A=
+gboolean related_url_cb(field_info *finfo, gboolean doit, const gchar** =
 ret_url)=0A=
+{=0A=
+  =0A=
+  if(finfo && IS_FT_STRING(finfo->hfinfo->type)) {=0A=
+=0A=
+    if(doit && ret_url) {=0A=
+      /* the URL will be freed */=0A=
+      *ret_url =3D g_strndup(tvb_get_ptr(finfo->ds_tvb, finfo->start, =
finfo->length), finfo->length);=0A=
+=0A=
+      return TRUE;=0A=
+    } else {=0A=
+	return TRUE;=0A=
+    }=0A=
+  }=0A=
+=0A=
+  return FALSE;=0A=
+=0A=
+}=0A=
+=0A=
+=0A=
+=0A=
=0A=
Property changes on: epan/related.c=0A=
___________________________________________________________________=0A=
Name: svn:keywords=0A=
   + Id=0A=
Name: svn:eol-style=0A=
   + native=0A=
=0A=
Index: epan/related.h=0A=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=0A=
--- epan/related.h	(revision 0)=0A=
+++ epan/related.h	(revision 0)=0A=
@@ -0,0 +1,57 @@=0A=
+/* related.h=0A=
+ * related field information   2006  Graeme Lunt=0A=
+ *=0A=
+ * $Id$=0A=
+ *=0A=
+ * Wireshark - Network traffic analyzer=0A=
+ * By Gerald Combs <gerald@wireshark.org>=0A=
+ * Copyright 1998 Gerald Combs=0A=
+ * =0A=
+ * This program is free software; you can redistribute it and/or=0A=
+ * modify it under the terms of the GNU General Public License=0A=
+ * as published by the Free Software Foundation; either version 2=0A=
+ * of the License, or (at your option) any later version.=0A=
+ * =0A=
+ * This program is distributed in the hope that it will be useful,=0A=
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of=0A=
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the=0A=
+ * GNU General Public License for more details.=0A=
+ * =0A=
+ * You should have received a copy of the GNU General Public License=0A=
+ * along with this program; if not, write to the Free Software=0A=
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  =
02111-1307, USA.=0A=
+ */=0A=
+=0A=
+#ifndef _RELATED_H_=0A=
+#define _RELATED_H_=0A=
+=0A=
+#include <epan/proto.h>=0A=
+=0A=
+/* The callback function indicates if it can provide related =
information for=0A=
+   the given field by its return value. As much info is likely to be a =
URL=0A=
+   the callback can return a url which will be opened by the caller=0A=
+*/=0A=
+=0A=
+typedef gboolean (*related_cb)(field_info *finfo, gboolean doit, const =
gchar**  ret_url);=0A=
+=0A=
+void related_init();=0A=
+=0A=
+/* Register a related function for a given range of fields, or a =
specific =0A=
+   field type */=0A=
+int register_related_callback(const char *name, int hf_lb, int hf_ub, =
enum ftenum type, related_cb related);=0A=
+=0A=
+#define register_related_range_callback(n, lb, ub, cb) =
register_related_callback(n, lb, ub, FT_NONE, cb)=0A=
+#define register_related_type_callback(n, t, cb) =
register_related_callback(n, 0, G_MAXINT, t, cb)=0A=
+#define register_related_hfid_callback(n, h, cb) =
register_related_callback(n, h, h, FT_NONE, cb)=0A=
+=0A=
+=0A=
+/* Determine if there is related information for this field */=0A=
+gboolean have_related(field_info *finfo);=0A=
+=0A=
+/* Show the related information for this field */=0A=
+gboolean do_related(field_info *finfo, const gchar **ret_url);=0A=
+=0A=
+/* A common function for fields that are URIs */=0A=
+gboolean related_url_cb(field_info *finfo, gboolean doit, const gchar** =
 ret_url);=0A=
+=0A=
+#endif=0A=
=0A=
Property changes on: epan/related.h=0A=
___________________________________________________________________=0A=
Name: svn:keywords=0A=
   + Id=0A=
Name: svn:eol-style=0A=
   + native=0A=
=0A=
Index: epan/Makefile.common=0A=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=0A=
--- epan/Makefile.common	(revision 18688)=0A=
+++ epan/Makefile.common	(working copy)=0A=
@@ -71,6 +71,7 @@=0A=
 	radius_dict.c		\=0A=
 	range.c			\=0A=
 	reassemble.c		\=0A=
+	related.c 		\=0A=
 	req_resp_hdrs.c		\=0A=
 	sha1.c			\=0A=
 	sigcomp_state_hdlr.c	\=0A=
@@ -163,6 +164,7 @@=0A=
 	ptvcursor.h		\=0A=
 	range.h			\=0A=
 	reassemble.h		\=0A=
+	related.h 		\=0A=
 	report_err.h		\=0A=
 	req_resp_hdrs.h		\=0A=
 	rtp_pt.h		\=0A=
Index: epan/proto.h=0A=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=0A=
--- epan/proto.h	(revision 18688)=0A=
+++ epan/proto.h	(working copy)=0A=
@@ -212,6 +212,8 @@=0A=
  * used in field_info.flags. */=0A=
 #define FI_GENERATED		0x0002=0A=
 =0A=
+/* The protocol field is actually a URL */=0A=
+#define FI_URL                  0x0004=0A=
 =0A=
 /** convenience macro to get field_info.flags */=0A=
 #define FI_GET_FLAG(fi, flag) (fi->flags & flag)=0A=
@@ -289,6 +291,12 @@=0A=
 /** mark this protocol field as generated by Wireshark (and not read =
from the packet data) */=0A=
 #define PROTO_ITEM_SET_GENERATED(proto_item)	\=0A=
 	((proto_item) ? FI_SET_FLAG((proto_item)->finfo, FI_GENERATED) : 0)=0A=
+/* is this protocol field actually a URL */=0A=
+#define PROTO_ITEM_IS_URL(proto_item)	\=0A=
+	((proto_item) ? FI_GET_FLAG((proto_item)->finfo, FI_URL) : 0)=0A=
+/* mark this protocol field as a URL */=0A=
+#define PROTO_ITEM_SET_URL(proto_item)	\=0A=
+	((proto_item) ? FI_SET_FLAG((proto_item)->finfo, FI_URL) : 0)=0A=
 =0A=
 typedef void (*proto_tree_foreach_func)(proto_node *, gpointer);=0A=
 =0A=
Index: epan/dissectors/packet-ldap.c=0A=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=0A=
--- epan/dissectors/packet-ldap.c	(revision 18688)=0A=
+++ epan/dissectors/packet-ldap.c	(working copy)=0A=
@@ -642,7 +642,7 @@=0A=
 =0A=
 static int=0A=
 dissect_ldap_MessageID(gboolean implicit_tag _U_, tvbuff_t *tvb, int =
offset, packet_info *pinfo _U_, proto_tree *tree, int hf_index _U_) {=0A=
-#line 53 "ldap.cnf"=0A=
+#line 56 "ldap.cnf"=0A=
 =0A=
     offset =3D dissect_ber_integer(implicit_tag, pinfo, tree, tvb, =
offset, hf_index,=0A=
                                   &MessageID);=0A=
@@ -675,7 +675,7 @@=0A=
 =0A=
 static int=0A=
 dissect_ldap_LDAPString(gboolean implicit_tag _U_, tvbuff_t *tvb, int =
offset, packet_info *pinfo _U_, proto_tree *tree, int hf_index _U_) {=0A=
-#line 240 "ldap.cnf"=0A=
+#line 243 "ldap.cnf"=0A=
   tvbuff_t	*parameter_tvb =3D NULL;=0A=
   char          *ldapstring;=0A=
   gchar		*sc =3D NULL; /* semi-colon pointer */=0A=
@@ -799,7 +799,7 @@=0A=
 =0A=
 static int=0A=
 dissect_ldap_Simple(gboolean implicit_tag _U_, tvbuff_t *tvb, int =
offset, packet_info *pinfo _U_, proto_tree *tree, int hf_index _U_) {=0A=
-#line 103 "ldap.cnf"=0A=
+#line 106 "ldap.cnf"=0A=
 ldap_conv_info_t *ldap_info;=0A=
 =0A=
   offset =3D dissect_ber_octet_string(implicit_tag, pinfo, tree, tvb, =
offset, hf_index,=0A=
@@ -823,7 +823,7 @@=0A=
 =0A=
 static int=0A=
 dissect_ldap_Mechanism(gboolean implicit_tag _U_, tvbuff_t *tvb, int =
offset, packet_info *pinfo _U_, proto_tree *tree, int hf_index _U_) {=0A=
-#line 114 "ldap.cnf"=0A=
+#line 117 "ldap.cnf"=0A=
 =0A=
 ldap_conv_info_t *ldap_info;=0A=
 tvbuff_t	*parameter_tvb;=0A=
@@ -875,7 +875,7 @@=0A=
 =0A=
 static int=0A=
 dissect_ldap_Credentials(gboolean implicit_tag _U_, tvbuff_t *tvb, int =
offset, packet_info *pinfo _U_, proto_tree *tree, int hf_index _U_) {=0A=
-#line 153 "ldap.cnf"=0A=
+#line 156 "ldap.cnf"=0A=
 =0A=
 tvbuff_t	*parameter_tvb;=0A=
 ldap_conv_info_t *ldap_info;=0A=
@@ -943,7 +943,7 @@=0A=
 =0A=
 static int=0A=
 dissect_ldap_AuthenticationChoice(gboolean implicit_tag _U_, tvbuff_t =
*tvb, int offset, packet_info *pinfo _U_, proto_tree *tree, int hf_index =
_U_) {=0A=
-#line 415 "ldap.cnf"=0A=
+#line 418 "ldap.cnf"=0A=
   gint branch =3D -1;=0A=
   gint auth =3D -1;=0A=
   const gchar *valstr;=0A=
@@ -1041,7 +1041,7 @@=0A=
 =0A=
 static int=0A=
 dissect_ldap_BindResponse_resultCode(gboolean implicit_tag _U_, =
tvbuff_t *tvb, int offset, packet_info *pinfo _U_, proto_tree *tree, int =
hf_index _U_) {=0A=
-#line 357 "ldap.cnf"=0A=
+#line 360 "ldap.cnf"=0A=
 =0A=
   const gchar *valstr;=0A=
 =0A=
@@ -1088,8 +1088,13 @@=0A=
 =0A=
 static int=0A=
 dissect_ldap_LDAPURL(gboolean implicit_tag _U_, tvbuff_t *tvb, int =
offset, packet_info *pinfo _U_, proto_tree *tree, int hf_index _U_) {=0A=
-  offset =3D dissect_ldap_LDAPString(implicit_tag, tvb, offset, pinfo, =
tree, hf_index);=0A=
+  offset =3D dissect_ber_octet_string(implicit_tag, pinfo, tree, tvb, =
offset, hf_index,=0A=
+                                       NULL);=0A=
 =0A=
+#line 32 "ldap.cnf"=0A=
+	PROTO_ITEM_SET_URL(get_ber_last_created_item());=0A=
+=0A=
+=0A=
   return offset;=0A=
 }=0A=
 static int dissect_Referral_item(packet_info *pinfo, proto_tree *tree, =
tvbuff_t *tvb, int offset) {=0A=
@@ -1119,7 +1124,7 @@=0A=
 =0A=
 static int=0A=
 dissect_ldap_ServerSaslCreds(gboolean implicit_tag _U_, tvbuff_t *tvb, =
int offset, packet_info *pinfo _U_, proto_tree *tree, int hf_index _U_) {=0A=
-#line 179 "ldap.cnf"=0A=
+#line 182 "ldap.cnf"=0A=
 =0A=
 tvbuff_t	*parameter_tvb;=0A=
 ldap_conv_info_t *ldap_info;=0A=
@@ -1213,7 +1218,7 @@=0A=
 =0A=
 static int=0A=
 dissect_ldap_UnbindRequest(gboolean implicit_tag _U_, tvbuff_t *tvb, =
int offset, packet_info *pinfo _U_, proto_tree *tree, int hf_index _U_) {=0A=
-#line 436 "ldap.cnf"=0A=
+#line 439 "ldap.cnf"=0A=
 =0A=
  implicit_tag =3D TRUE; /* correct problem with asn2wrs */=0A=
 =0A=
@@ -1245,7 +1250,7 @@=0A=
 =0A=
 static int=0A=
 dissect_ldap_T_scope(gboolean implicit_tag _U_, tvbuff_t *tvb, int =
offset, packet_info *pinfo _U_, proto_tree *tree, int hf_index _U_) {=0A=
-#line 316 "ldap.cnf"=0A=
+#line 319 "ldap.cnf"=0A=
 =0A=
   gint 	scope;=0A=
   const gchar *valstr;=0A=
@@ -1313,7 +1318,7 @@=0A=
 =0A=
 static int=0A=
 dissect_ldap_BOOLEAN(gboolean implicit_tag _U_, tvbuff_t *tvb, int =
offset, packet_info *pinfo _U_, proto_tree *tree, int hf_index _U_) {=0A=
-#line 529 "ldap.cnf"=0A=
+#line 532 "ldap.cnf"=0A=
 	gboolean val;=0A=
 =0A=
 	offset =3D dissect_ber_boolean_value(implicit_tag, pinfo, tree, tvb, =
offset, hf_index, &val);=0A=
@@ -1345,7 +1350,7 @@=0A=
 dissect_ldap_T_and_item(gboolean implicit_tag _U_, tvbuff_t *tvb, int =
offset, packet_info *pinfo _U_, proto_tree *tree, int hf_index _U_) {=0A=
   offset =3D dissect_ldap_Filter(implicit_tag, tvb, offset, pinfo, =
tree, hf_index);=0A=
 =0A=
-#line 470 "ldap.cnf"=0A=
+#line 473 "ldap.cnf"=0A=
 	if(and_filter_string){=0A=
 		=
and_filter_string=3Dep_strdup_printf("(&%s%s)",and_filter_string,Filter_s=
tring);=0A=
 	} else {=0A=
@@ -1366,7 +1371,7 @@=0A=
 =0A=
 static int=0A=
 dissect_ldap_T_and(gboolean implicit_tag _U_, tvbuff_t *tvb, int =
offset, packet_info *pinfo _U_, proto_tree *tree, int hf_index _U_) {=0A=
-#line 477 "ldap.cnf"=0A=
+#line 480 "ldap.cnf"=0A=
 	const ber_sequence_t and_set_of[1] =3D {  { BER_CLASS_ANY/*choice*/, =
-1/*choice*/, BER_FLAGS_NOOWNTAG|BER_FLAGS_NOTCHKTAG, dissect_and_item },=0A=
 };=0A=
 	proto_tree *tr=3DNULL;=0A=
@@ -1399,7 +1404,7 @@=0A=
 dissect_ldap_T_or_item(gboolean implicit_tag _U_, tvbuff_t *tvb, int =
offset, packet_info *pinfo _U_, proto_tree *tree, int hf_index _U_) {=0A=
   offset =3D dissect_ldap_Filter(implicit_tag, tvb, offset, pinfo, =
tree, hf_index);=0A=
 =0A=
-#line 496 "ldap.cnf"=0A=
+#line 499 "ldap.cnf"=0A=
 	if(or_filter_string){=0A=
 		=
or_filter_string=3Dep_strdup_printf("(|%s%s)",or_filter_string,Filter_str=
ing);=0A=
 	} else {=0A=
@@ -1421,7 +1426,7 @@=0A=
 =0A=
 static int=0A=
 dissect_ldap_T_or(gboolean implicit_tag _U_, tvbuff_t *tvb, int offset, =
packet_info *pinfo _U_, proto_tree *tree, int hf_index _U_) {=0A=
-#line 504 "ldap.cnf"=0A=
+#line 507 "ldap.cnf"=0A=
 	const ber_sequence_t or_set_of[1] =3D {  { BER_CLASS_ANY/*choice*/, =
-1/*choice*/, BER_FLAGS_NOOWNTAG|BER_FLAGS_NOTCHKTAG, dissect_or_item },=0A=
 };=0A=
 	proto_tree *tr=3DNULL;=0A=
@@ -1454,7 +1459,7 @@=0A=
 dissect_ldap_T_not(gboolean implicit_tag _U_, tvbuff_t *tvb, int =
offset, packet_info *pinfo _U_, proto_tree *tree, int hf_index _U_) {=0A=
   offset =3D dissect_ldap_Filter(implicit_tag, tvb, offset, pinfo, =
tree, hf_index);=0A=
 =0A=
-#line 526 "ldap.cnf"=0A=
+#line 529 "ldap.cnf"=0A=
 	Filter_string=3Dep_strdup_printf("(!%s)",Filter_string);=0A=
 =0A=
 =0A=
@@ -1516,7 +1521,7 @@=0A=
 dissect_ldap_T_equalityMatch(gboolean implicit_tag _U_, tvbuff_t *tvb, =
int offset, packet_info *pinfo _U_, proto_tree *tree, int hf_index _U_) {=0A=
   offset =3D dissect_ldap_AttributeValueAssertion(implicit_tag, tvb, =
offset, pinfo, tree, hf_index);=0A=
 =0A=
-#line 455 "ldap.cnf"=0A=
+#line 458 "ldap.cnf"=0A=
 	=
Filter_string=3Dep_strdup_printf("(%s=3D%s)",attributedesc_string,asserti=
onvalue_string);=0A=
 =0A=
 =0A=
@@ -1548,7 +1553,7 @@=0A=
                                  =
T_substringFilter_substrings_item_choice, hf_index, =
ett_ldap_T_substringFilter_substrings_item,=0A=
                                  NULL);=0A=
 =0A=
-#line 552 "ldap.cnf"=0A=
+#line 555 "ldap.cnf"=0A=
 	if (substring_item_final) {=0A=
 		substring_value=3Dep_strdup_printf("%s%s",=0A=
 						 (substring_value?substring_value:"*"),=0A=
@@ -1594,7 +1599,7 @@=0A=
 =0A=
 static int=0A=
 dissect_ldap_SubstringFilter(gboolean implicit_tag _U_, tvbuff_t *tvb, =
int offset, packet_info *pinfo _U_, proto_tree *tree, int hf_index _U_) {=0A=
-#line 566 "ldap.cnf"=0A=
+#line 569 "ldap.cnf"=0A=
 	proto_tree *tr=3DNULL;=0A=
 	proto_item *it=3DNULL;=0A=
 	char *old_substring_value=3Dsubstring_value;=0A=
@@ -1629,7 +1634,7 @@=0A=
 dissect_ldap_T_greaterOrEqual(gboolean implicit_tag _U_, tvbuff_t *tvb, =
int offset, packet_info *pinfo _U_, proto_tree *tree, int hf_index _U_) {=0A=
   offset =3D dissect_ldap_AttributeValueAssertion(implicit_tag, tvb, =
offset, pinfo, tree, hf_index);=0A=
 =0A=
-#line 459 "ldap.cnf"=0A=
+#line 462 "ldap.cnf"=0A=
 	=
Filter_string=3Dep_strdup_printf("(%s>=3D%s)",attributedesc_string,assert=
ionvalue_string);=0A=
 =0A=
 =0A=
@@ -1646,7 +1651,7 @@=0A=
 dissect_ldap_T_lessOrEqual(gboolean implicit_tag _U_, tvbuff_t *tvb, =
int offset, packet_info *pinfo _U_, proto_tree *tree, int hf_index _U_) {=0A=
   offset =3D dissect_ldap_AttributeValueAssertion(implicit_tag, tvb, =
offset, pinfo, tree, hf_index);=0A=
 =0A=
-#line 463 "ldap.cnf"=0A=
+#line 466 "ldap.cnf"=0A=
 	=
Filter_string=3Dep_strdup_printf("(%s<=3D%s)",attributedesc_string,assert=
ionvalue_string);=0A=
 =0A=
 =0A=
@@ -1663,7 +1668,7 @@=0A=
 dissect_ldap_T_present(gboolean implicit_tag _U_, tvbuff_t *tvb, int =
offset, packet_info *pinfo _U_, proto_tree *tree, int hf_index _U_) {=0A=
   offset =3D dissect_ldap_AttributeDescription(implicit_tag, tvb, =
offset, pinfo, tree, hf_index);=0A=
 =0A=
-#line 523 "ldap.cnf"=0A=
+#line 526 "ldap.cnf"=0A=
 	Filter_string=3Dep_strdup_printf("(%s=3D*)",Filter_string);=0A=
 =0A=
 =0A=
@@ -1679,7 +1684,7 @@=0A=
 dissect_ldap_T_approxMatch(gboolean implicit_tag _U_, tvbuff_t *tvb, =
int offset, packet_info *pinfo _U_, proto_tree *tree, int hf_index _U_) {=0A=
   offset =3D dissect_ldap_AttributeValueAssertion(implicit_tag, tvb, =
offset, pinfo, tree, hf_index);=0A=
 =0A=
-#line 467 "ldap.cnf"=0A=
+#line 470 "ldap.cnf"=0A=
 	=
Filter_string=3Dep_strdup_printf("(%s~=3D%s)",attributedesc_string,assert=
ionvalue_string);=0A=
 =0A=
 =0A=
@@ -1722,7 +1727,7 @@=0A=
 =0A=
 static int=0A=
 dissect_ldap_T_extensibleMatch(gboolean implicit_tag _U_, tvbuff_t =
*tvb, int offset, packet_info *pinfo _U_, proto_tree *tree, int hf_index =
_U_) {=0A=
-#line 538 "ldap.cnf"=0A=
+#line 541 "ldap.cnf"=0A=
 	attr_type=3DNULL;=0A=
 	matching_rule_string=3DNULL;=0A=
 	assertionvalue_string=3DNULL;=0A=
@@ -1731,7 +1736,7 @@=0A=
 =0A=
   offset =3D dissect_ldap_MatchingRuleAssertion(implicit_tag, tvb, =
offset, pinfo, tree, hf_index);=0A=
 =0A=
-#line 544 "ldap.cnf"=0A=
+#line 547 "ldap.cnf"=0A=
 	Filter_string=3Dep_strdup_printf("(%s:%s%s%s=3D%s)",=0A=
 					(attr_type?attr_type:""),=0A=
 					(matching_rule_dnattr?"dn:":""),=0A=
@@ -1777,7 +1782,7 @@=0A=
 =0A=
 static int=0A=
 dissect_ldap_Filter(gboolean implicit_tag _U_, tvbuff_t *tvb, int =
offset, packet_info *pinfo _U_, proto_tree *tree, int hf_index _U_) {=0A=
-#line 587 "ldap.cnf"=0A=
+#line 590 "ldap.cnf"=0A=
 	proto_tree *tr=3DNULL;=0A=
 	proto_item *it=3DNULL;=0A=
 =0A=
@@ -1800,13 +1805,13 @@=0A=
 =0A=
 static int=0A=
 dissect_ldap_T_filter(gboolean implicit_tag _U_, tvbuff_t *tvb, int =
offset, packet_info *pinfo _U_, proto_tree *tree, int hf_index _U_) {=0A=
-#line 448 "ldap.cnf"=0A=
+#line 451 "ldap.cnf"=0A=
 	Filter_string=3DNULL;=0A=
 =0A=
 =0A=
   offset =3D dissect_ldap_Filter(implicit_tag, tvb, offset, pinfo, =
tree, hf_index);=0A=
 =0A=
-#line 451 "ldap.cnf"=0A=
+#line 454 "ldap.cnf"=0A=
 	Filter_string=3DNULL;=0A=
 	and_filter_string=3DNULL;=0A=
 =0A=
@@ -1861,7 +1866,7 @@=0A=
 =0A=
 static int=0A=
 dissect_ldap_AttributeValue(gboolean implicit_tag _U_, tvbuff_t *tvb, =
int offset, packet_info *pinfo _U_, proto_tree *tree, int hf_index _U_) {=0A=
-#line 378 "ldap.cnf"=0A=
+#line 381 "ldap.cnf"=0A=
 =0A=
   tvbuff_t	*next_tvb;=0A=
   gchar		*string;=0A=
@@ -2021,7 +2026,7 @@=0A=
 =0A=
 static int=0A=
 dissect_ldap_T_resultCode(gboolean implicit_tag _U_, tvbuff_t *tvb, int =
offset, packet_info *pinfo _U_, proto_tree *tree, int hf_index _U_) {=0A=
-#line 335 "ldap.cnf"=0A=
+#line 338 "ldap.cnf"=0A=
 =0A=
   const gchar *valstr;=0A=
 =0A=
@@ -2376,7 +2381,7 @@=0A=
 =0A=
 static int=0A=
 dissect_ldap_LDAPOID(gboolean implicit_tag _U_, tvbuff_t *tvb, int =
offset, packet_info *pinfo _U_, proto_tree *tree, int hf_index _U_) {=0A=
-#line 33 "ldap.cnf"=0A=
+#line 36 "ldap.cnf"=0A=
 =0A=
 	tvbuff_t	*parameter_tvb;=0A=
 	const gchar *name;=0A=
@@ -2387,7 +2392,7 @@=0A=
   offset =3D dissect_ber_octet_string(implicit_tag, pinfo, tree, tvb, =
offset, hf_index,=0A=
                                        &parameter_tvb);=0A=
 =0A=
-#line 40 "ldap.cnf"=0A=
+#line 43 "ldap.cnf"=0A=
 	if (!parameter_tvb)=0A=
 		return offset;=0A=
 	item =3D get_ber_last_created_item();=0A=
@@ -2583,7 +2588,7 @@=0A=
 =0A=
 static int=0A=
 dissect_ldap_ProtocolOp(gboolean implicit_tag _U_, tvbuff_t *tvb, int =
offset, packet_info *pinfo _U_, proto_tree *tree, int hf_index _U_) {=0A=
-#line 61 "ldap.cnf"=0A=
+#line 64 "ldap.cnf"=0A=
 =0A=
   ldap_call_response_t *lcrp;=0A=
   ldap_conv_info_t *ldap_info =3D (ldap_conv_info_t =
*)pinfo->private_data;=0A=
@@ -2594,7 +2599,7 @@=0A=
                                  ProtocolOp_choice, hf_index, =
ett_ldap_ProtocolOp,=0A=
                                  &ProtocolOp);=0A=
 =0A=
-#line 67 "ldap.cnf"=0A=
+#line 70 "ldap.cnf"=0A=
 =0A=
   lcrp=3Dldap_match_call_response(tvb, pinfo, tree, MessageID, =
ProtocolOp);=0A=
   if(lcrp){=0A=
Index: epan/dissectors/packet-x509ce.c=0A=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=0A=
--- epan/dissectors/packet-x509ce.c	(revision 18688)=0A=
+++ epan/dissectors/packet-x509ce.c	(working copy)=0A=
@@ -1,6 +1,6 @@=0A=
 /* Do not modify this file.                                             =
      */=0A=
 /* It is created automatically by the ASN.1 to Wireshark dissector =
compiler   */=0A=
-/* .\packet-x509ce.c                                                    =
      */=0A=
+/* ./packet-x509ce.c                                                    =
      */=0A=
 /* ../../tools/asn2wrs.py -b -e -p x509ce -c x509ce.cnf -s =
packet-x509ce-template CertificateExtensions.asn */=0A=
 =0A=
 /* Input file: packet-x509ce-template.c */=0A=
@@ -38,6 +38,7 @@=0A=
 #include <glib.h>=0A=
 #include <epan/packet.h>=0A=
 #include <epan/conversation.h>=0A=
+#include <epan/related.h>=0A=
 =0A=
 #include <stdio.h>=0A=
 #include <string.h>=0A=
@@ -213,7 +214,7 @@=0A=
 static int hf_x509ce_ReasonFlags_aACompromise =3D -1;=0A=
 =0A=
 /*--- End of included file: packet-x509ce-hf.c ---*/=0A=
-#line 55 "packet-x509ce-template.c"=0A=
+#line 56 "packet-x509ce-template.c"=0A=
 =0A=
 /* Initialize the subtree pointers */=0A=
 =0A=
@@ -265,7 +266,7 @@=0A=
 static gint ett_x509ce_PkiPathMatchSyntax =3D -1;=0A=
 =0A=
 /*--- End of included file: packet-x509ce-ett.c ---*/=0A=
-#line 58 "packet-x509ce-template.c"=0A=
+#line 59 "packet-x509ce-template.c"=0A=
 =0A=
 static const char *object_identifier_id;=0A=
 =0A=
@@ -1657,7 +1658,7 @@=0A=
 =0A=
 =0A=
 /*--- End of included file: packet-x509ce-fn.c ---*/=0A=
-#line 62 "packet-x509ce-template.c"=0A=
+#line 63 "packet-x509ce-template.c"=0A=
 =0A=
 =0A=
 static void=0A=
@@ -2289,7 +2290,7 @@=0A=
         "", HFILL }},=0A=
 =0A=
 /*--- End of included file: packet-x509ce-hfarr.c ---*/=0A=
-#line 97 "packet-x509ce-template.c"=0A=
+#line 98 "packet-x509ce-template.c"=0A=
   };=0A=
 =0A=
   /* List of subtrees */=0A=
@@ -2343,7 +2344,7 @@=0A=
     &ett_x509ce_PkiPathMatchSyntax,=0A=
 =0A=
 /*--- End of included file: packet-x509ce-ettarr.c ---*/=0A=
-#line 102 "packet-x509ce-template.c"=0A=
+#line 103 "packet-x509ce-template.c"=0A=
   };=0A=
 =0A=
   /* Register protocol */=0A=
@@ -2391,8 +2392,11 @@=0A=
 =0A=
 =0A=
 /*--- End of included file: packet-x509ce-dis-tab.c ---*/=0A=
-#line 117 "packet-x509ce-template.c"=0A=
+#line 118 "packet-x509ce-template.c"=0A=
 	register_ber_oid_dissector("2.5.29.24", =
dissect_x509ce_invalidityDate_callback, proto_x509ce, =
"id-ce-invalidityDate");=0A=
 	register_ber_oid_dissector("2.5.29.51", =
dissect_x509ce_baseUpdateTime_callback, proto_x509ce, =
"id-ce-baseUpdateTime");=0A=
+=0A=
+	register_related_hfid_callback("GeneralName URL", =
hf_x509ce_uniformResourceIdentifier, related_url_cb);=0A=
+=0A=
 }=0A=
 =0A=
Index: epan/dissectors/packet-logotypecertextn.c=0A=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=0A=
--- epan/dissectors/packet-logotypecertextn.c	(revision 18688)=0A=
+++ epan/dissectors/packet-logotypecertextn.c	(working copy)=0A=
@@ -1,6 +1,6 @@=0A=
 /* Do not modify this file.                                             =
      */=0A=
 /* It is created automatically by the ASN.1 to Wireshark dissector =
compiler   */=0A=
-/* .\packet-logotypecertextn.c                                          =
      */=0A=
+/* ./packet-logotypecertextn.c                                          =
      */=0A=
 /* ../../tools/asn2wrs.py -b -e -p logotypecertextn -c =
logotype-cert-extn.cnf -s packet-logotype-cert-extn-template =
LogotypeCertExtn.asn */=0A=
 =0A=
 /* Input file: packet-logotype-cert-extn-template.c */=0A=
@@ -144,6 +144,13 @@=0A=
                                             pinfo, tree, tvb, offset, =
hf_index,=0A=
                                             NULL);=0A=
 =0A=
+#line 18 "logotype-cert-extn.cnf"=0A=
+	if((hf_index =3D=3D hf_logotypecertextn_logotypeURI_item) ||=0A=
+	   (hf_index =3D=3D hf_logotypecertextn_refStructURI_item)) =0A=
+	   PROTO_ITEM_SET_URL(get_ber_last_created_item());=0A=
+=0A=
+=0A=
+=0A=
   return offset;=0A=
 }=0A=
 static int dissect_mediaType(packet_info *pinfo, proto_tree *tree, =
tvbuff_t *tvb, int offset) {=0A=
@@ -311,8 +318,8 @@=0A=
 };=0A=
 =0A=
 static const ber_choice_t LogotypeImageResolution_choice[] =3D {=0A=
-  {   1, BER_CLASS_CON, 1, 0, dissect_numBits_impl },=0A=
-  {   2, BER_CLASS_CON, 2, 0, dissect_tableSize_impl },=0A=
+  {   1, BER_CLASS_CON, 1, BER_FLAGS_IMPLTAG, dissect_numBits_impl },=0A=
+  {   2, BER_CLASS_CON, 2, BER_FLAGS_IMPLTAG, dissect_tableSize_impl },=0A=
   { 0, 0, 0, 0, NULL }=0A=
 };=0A=
 =0A=
@@ -499,8 +506,8 @@=0A=
 };=0A=
 =0A=
 static const ber_choice_t LogotypeInfo_choice[] =3D {=0A=
-  {   0, BER_CLASS_CON, 0, 0, dissect_direct_impl },=0A=
-  {   1, BER_CLASS_CON, 1, 0, dissect_indirect_impl },=0A=
+  {   0, BER_CLASS_CON, 0, BER_FLAGS_IMPLTAG, dissect_direct_impl },=0A=
+  {   1, BER_CLASS_CON, 1, BER_FLAGS_IMPLTAG, dissect_indirect_impl },=0A=
   { 0, 0, 0, 0, NULL }=0A=
 };=0A=
 =0A=
Index: epan/dissectors/packet-x509ce.h=0A=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=0A=
--- epan/dissectors/packet-x509ce.h	(revision 18688)=0A=
+++ epan/dissectors/packet-x509ce.h	(working copy)=0A=
@@ -1,6 +1,6 @@=0A=
 /* Do not modify this file.                                             =
      */=0A=
 /* It is created automatically by the ASN.1 to Wireshark dissector =
compiler   */=0A=
-/* .\packet-x509ce.h                                                    =
      */=0A=
+/* ./packet-x509ce.h                                                    =
      */=0A=
 /* ../../tools/asn2wrs.py -b -e -p x509ce -c x509ce.cnf -s =
packet-x509ce-template CertificateExtensions.asn */=0A=
 =0A=
 /* Input file: packet-x509ce-template.h */=0A=
Index: epan/dissectors/packet-logotypecertextn.h=0A=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=0A=
--- epan/dissectors/packet-logotypecertextn.h	(revision 18688)=0A=
+++ epan/dissectors/packet-logotypecertextn.h	(working copy)=0A=
@@ -1,6 +1,6 @@=0A=
 /* Do not modify this file.                                             =
      */=0A=
 /* It is created automatically by the ASN.1 to Wireshark dissector =
compiler   */=0A=
-/* .\packet-logotypecertextn.h                                          =
      */=0A=
+/* ./packet-logotypecertextn.h                                          =
      */=0A=
 /* ../../tools/asn2wrs.py -b -e -p logotypecertextn -c =
logotype-cert-extn.cnf -s packet-logotype-cert-extn-template =
LogotypeCertExtn.asn */=0A=
 =0A=
 /* Input file: packet-logotype-cert-extn-template.h */=0A=
Index: epan/oid_resolv.c=0A=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=0A=
--- epan/oid_resolv.c	(revision 18688)=0A=
+++ epan/oid_resolv.c	(working copy)=0A=
@@ -32,11 +32,44 @@=0A=
 #include "to_str.h"=0A=
 #include "strutil.h"=0A=
 #include "epan/dissectors/format-oid.h"=0A=
+#include "related.h"=0A=
 =0A=
 static GHashTable *oid_table =3D NULL;=0A=
 =0A=
+/* this should be configurable - but where ? */=0A=
+static const gchar *oid_url_template =3D =
"http://www.alvestrand.no/objectid/%s.html";=0A=
+=0A=
+static gboolean oid_related_cb(field_info *finfo, gboolean doit, const =
gchar **ret_url)=0A=
+{=0A=
+  const char *oid;=0A=
+  =0A=
+  if(finfo && (finfo->hfinfo->type =3D=3D FT_OID) && =0A=
+     (oid_url_template !=3D NULL) && (*oid_url_template !=3D '\0')) {=0A=
+    if(doit && ret_url) {=0A=
+      /* return the URL */=0A=
+      oid =3D oid_to_str(tvb_get_ptr(finfo->ds_tvb, finfo->start, =
finfo->length),=0A=
+		       finfo->length);=0A=
+=0A=
+      /* the URL will be freed */=0A=
+      *ret_url =3D g_strdup_printf(oid_url_template, oid);=0A=
+      return TRUE;=0A=
+    } else {=0A=
+      /* return TRUE if we are configured to return URLs */=0A=
+=0A=
+      if((oid_url_template !=3D NULL) && (*oid_url_template !=3D '\0')) =0A=
+	return TRUE;=0A=
+      =0A=
+    }=0A=
+  }=0A=
+=0A=
+  return FALSE;=0A=
+}=0A=
+=0A=
 void oid_resolv_init(void) {=0A=
   oid_table =3D g_hash_table_new(g_str_hash, g_str_equal);=0A=
+  =0A=
+  register_related_type_callback("OID Ref", FT_OID, oid_related_cb);=0A=
+=0A=
 }=0A=
 =0A=
 static void free_oid_str(gpointer key, gpointer value _U_,=0A=
Index: epan/epan.c=0A=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=0A=
--- epan/epan.c	(revision 18688)=0A=
+++ epan/epan.c	(working copy)=0A=
@@ -24,6 +24,7 @@=0A=
 #include "oid_resolv.h"=0A=
 #include "emem.h"=0A=
 #include "expert.h"=0A=
+#include "related.h"=0A=
 =0A=
 static void (*report_failure_func)(const char *, va_list);=0A=
 static void (*report_open_failure_func)(const char *, int, gboolean);=0A=
@@ -75,6 +76,7 @@=0A=
 	final_registration_all_protocols();=0A=
 	host_name_lookup_init();=0A=
 	expert_init();=0A=
+	related_init();=0A=
 }=0A=
 =0A=
 void=0A=

------=_NextPart_000_0012_01C7B64E.426C8120--

.